# Problem 2: Demons and Multiple Equilibria {#sec-multiple}

This section is about problems like Newcomb's Problem [@Nozick1969]. I'm not going to start with Newcomb's Problem itself; I would end up replaying familiar lines if I started there. Instead I'll start with a very generic form of similar problems.

@tbl-generic-demon is (the strategic form of) a completely generic form of a 2-by-2 decision problem involving demons. At stage 2, Chooser will pick Up or Down. At stage 1, Demon will predict what Chooser will do. I'll only discuss cases where Demon is (believed to be) arbitrarily close to perfect in their predictions. 

|           |       PU     |     PD       |
|:---------:|:------------:|:------------:|
|  **Up**   |     *a*      |     *b*      |
|  **Down** |     *c*      |     *d*      |

: A generic demon problem {#tbl-generic-demon}

Say that an option is a strict equilibrium if, assuming Demon predicts correctly, Chooser's payout for choosing it is (strictly) greater than their payout for choosing any other option. So Up is a strict equilibrium if *a* > *c*. The focus in this section is going to be on problems where both Ip and Down are strict equilibria, so *a* > *c*, and *d* > *b*. While Newcomb's Problem itself is not such a case, most of the views that have been proposed to deal with Newcomb's Problem have consequences for the case where both Up and Down are strict equilibria, and they typically say things that violate SCP.

To simplify matters, I'm going to make two further assumptions which are widely, but not universally, shared. First, I'll assume that the names of the options are irrelevant. In particular, I'll assume that if Up is rationally permissible in @tbl-generic-demon, then Down is permissible in @tbl-inverted-generic. Call this assumption **Label Neutrality**.

|           |       PU     |     PD       |
|:---------:|:------------:|:------------:|
|  **Up**   |     *d*      |     *c*      |
|  **Down** |     *b*      |     *a*      |

: @tbl-generic-demon with labels inverted {#tbl-inverted-generic}

The second assumption is that in any instance of @tbl-generic-demon, the four payouts, plus the conditional probabilities of a correct prediction given each choice by Chooser, settle which options are choice-worthy. This isn't universally shared, but it is very widely shared. Indeed, it is common in philosophy papers to specify nothing but these values and then ask for intuitions about the case, which suggests many people do presuppose that only these values are necessary. Call this assumption **Settling**, because the values (plus the probabilities of correct prediction given each choice) settle what is choice-worthy.

**Settling** is rejected by theorists such as @Skyrms1982 and @Joyce2012, who say that in problems like these, Chooser's starting view about what option they will eventually select also makes a difference to what they should do. Those views are not subject to the objections I'm about to make––provided Chooser's credences satisfy some rather tight constraints.

I'm going to largely focus on versions of @tbl-generic-demon where *a* and *d* are positive, and *b* = *c* = 0. This kind of problem is called Nice Demon by @Skyrms1982 and @Weirich1988, and is shown in @tbl-nice-demon. I'm going to mostly discuss the case, discussed by Weirich but not Skyrms, where *a* ≠ *d*. The main conclusion is that given these three assumptions (SCP, **Label Neutrality** and **Settling**), both Up and Down are permissible in these cases.

|           |       PU     |     PD       |
|:---------:|:------------:|:------------:|
|  **Up**   |     *a*      |     0      |
|  **Down** |     0      |     *d*      |

: Nice demon {#tbl-nice-demon}

There is a quick argument, independent of SCP, for the same conclusion. Whatever values *a* and *d* are, it's permissible for Chooser to be arbitrarily confident that they will play Up. Given that confidence, Chooser should think that Up maximises expected utility. It's permissible to choose an option that maximises expected utility given permissible credences. Therefore Up is rationally permissible. Since Up was arbitrary in this argument, it is also permissible to choose Down, so both are permissible.

Weirich [-@Weirich1988 563] makes a version of this argument, and then says that since the conclusion is obviously false, something must be wrong with it. He thinks that Chooser should not be allowed to use credences about their own future actions in the way the argument presupposes. This allows him to say, along with many others, that if *d* > *a*, then only Down is rationally permissible. I'm not going to rely on this argument, but simply note that it doesn't seem like a bad argument to me, and in any case I will be endorsing its conclusion.^[@Spencer2023 makes a related argument in the course of defending the permissibility of both options.]

There are three interesting families of views which differ markedly with each other in general, but which agree that in @tbl-nice-demon, whichever of *a* and *d* is larger determines which option is uniquely choiceworthy.

The first family of views is just a single, famous, view: Evidential Decision Theory. It says that in any version of @tbl-generic-demon, if *a* ≠ *d*, then whichever is larger should be chosen. Hence it says that in @tbl-nice-demon, the larger value should be chosen.

The second family of views are what @EellsHarper1991 call Maximum Ratifiability views. They say that when there are multiple ratifiable options, the value with the highest expected utility should be chosen. Such views differ on what to do when there are no ratifiable options, which is why I'm calling this a family of views. But they all agree on @tbl-nice-demon. Maximum Ratifiability is defended by @Jeffrey1983, @Sobel1983, @Harper1984, @Weirich1988, @Arntzenius2008, and @Gustafsson2011.

The third family of views say that in any version of @tbl-generic-demon, one should minimise possible regret. That is, one should choose Up if the possible Regret from choosing Up, *d* - *b*, is less than the possible regret from choosing Down, *a* - *c*. @Wedgwood2013a, @Gallow2020, @Podgorski2022, and @Barnett2022 endorse such a view, though they go on to say very different things about cases with three or more options. These views also say that in @tbl-nice-demon, whichever of *a* and *d* is larger determines the uniquely choiceworthy option.

All of these views violate SCP. The argument turns on the problem depicted in @fig-main-example, back in @sec-scp-clarify. Recall that it's a three stage decision problem.

- First, Demon predicts what Chooser will do at stage three (if it gets that far).
- Second, if Demon predicts Up, a coin will be flipped. If it lands Heads, the problem ends, and Chooser gets 0. Otherwise we continue to stage three.
- Third, Chooser chooses Up or Down. If Demon's prediction is incorrect, Chooser gets 0. But that's unlikely; Demon is arbitrarily good at predictions. If Demon correctly predicted Up, Chooser gets 6; if Demon correctly predicted Down, Chooser gets 4.

All of the views just described say that, if it reaches stage three, Chooser should take Up. At that time, Up maximises conditional expected utility, it has the highest return of any ratifiable option, and it minimises possible regret.

The strategic form of the problem is given in @tbl-main-example-simple. I'd previously given the strategic form of the problem as #tbl-main-example, but now it can be simplified. That's because we've shown (in @sec-buchak) that Chooser should maximise expected utility, not risk-adjusted expected utility.

|      |  PU    | PD    |
|-----:|:------:|:-----:|
| Up   |   3    |   0   |
| Down |   0    |   4   |

: Simplified strategic form of @fig-main-example. {#tbl-main-example-simple}

In this example, Down is uniquely choice-worthy on all three of these theories. It maximises conditional expected utility, it is the ratifiable choice with maximum return, and it minimises possible regret.

So all of these views violate the SCP. In the strategic form of @fig-main-example, they prefer Down to Up, but at the only point Chooser can possibly move in @fig-main-example, they prefer Up to Down.

The point is not that this leads to any kind of Dutch Book, or money pump, or sure loss. Any attempt to turn the SCP into a pragmatic argument like this would fail. Rather, it is that these views answer the same question two different ways, depending on how it is asked. As David @Christensen1994 argued, this is really what's significant in Dutch Book arguments.

The two questions that they are answering differently are:

1. Do you prefer that, if Chooser reaches stage 3, they play Up or Down?
2. On the assumption that Chooser reaches stage 3, do you prefer they play Up or Down?

The answer they give to Q1 is _Down_.that follows from the fact that they prefer Down to Up in @tbl-main-example-simple. The answer they give to Q2 is _Up_. that follows from the fact that they prefer Up to Down if we replace the 3 in @tbl-main-example-simple with the actual payout for a correct prediction of Up, namely 6.

Now one could try to develop a theory of conditionals on which it makes sense to answer these questions differently. Or one could try to develop a metaphysics of strategies that undermined a background assumption of this paper, namely that we should express strategies as conditionals. I suspect the prospects for either approach are dim, and so I think this is an argument that all of these views are incoherent; they give inconsistent answers to two formulations of the very same question.