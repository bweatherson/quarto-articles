Think about two ways to play chess.

First, we might sit down somewhere, possibly in a park, facing each other, with a board and some pieces in front of us. We take turns moving pieces, and eventually someone wins. Probably you; I'm not very good at chess.

Second, we sit down at our computers, probably not in a park, and write code to make our computers play chess against each other. We meet, exchange code, and run the programs against each other to see who wins. It's still probably you, but my chances would be a bit better in this form.

In the first version we are playing the *dynamic* form of chess; in the second we are playing the *strategic* form. In game-theoretic language, a strategy for a game like chess is a set of instructions saying what to do in every possible state of the game.^[Standardly, this includes states that are ruled out by the earlier parts of the strategy.] An explicit strategy for chess, with a conditional saying _If in state S, make move M_ for every possible state _S_, would be unimaginably large. But code for chess computers can be quite compact; I have a few versions just on my phone.

This is a philosophy paper, so I'm going to take these mundane examples, idealise them, and evaluate the idealisations. 

The idealisation is that I'm going to not assume it's you and me playing, but two characters who have no computational limitations. I'll call one of these Chooser. 

The evaluation is that for Chooser, some moves are rational and some are not. This is true whether Chooser is playing the dynamic or the strategic form. 

To start I won't ask what moves are rational, but instead ask about the connection between the two games. In particular, are the evaluations for the two games related in the following way.

Dynamic-Strategic Equivalance (for chess)
:    Move _M_ at game state _S_ in the dynamic game is rational iff some strategy which includes _If S, do M_ is rational in the strategic game.

This is not an implausible view, in part because of some special features of chess. Chess includes no random moves by Nature, no information that is revealed to some players and not others, and it is zero-sum. By 'zero-sum', I mean that there is no pair of players and pair of game states such that both players are better off in one of the states than the other. 

Games in general need not have any of these features. _Settlers of Catan_, for example, has none of them. There are random dice rolls and card draws; while the dice are public, the cards are private; and there are mutually beneficial trades between players. Some theories say that in games with these features, especially the last, Dynamic-Strategic Equivalence can fail. (The other two features will require us to be careful in how we state Dynamic-Strategic Equivalence.)

Consider a very simplified version of the Ultimatum game. In this version, the players have \$3 to distribute. As in the standard version, Proposer will suggest a split of the money, and Respondant will accept or reject the split. If they reject it, neither player will get any money. I'll add two more simplifications. First, only proper splits are allowed; Proposer can't suggest that one or other party gets all the money. Second, the dollars cannot be split. So the only proposals are that Proposer gets \$1 and Respondant gets \$2, or that Proposer gets \$2 and Respondant gets \$1. Call these Proposals P1 and P2.

In this game, Respondant has four possible strategies. I'll write XY for responding to P1 with X and P2 with Y. So the strategy RA is the (odd) strategy of rejecting the offer of \$2 and accepting the offer of \$1. Using this terminology, this version of Ultimatum is given by @tbl-ultimatum. (As usual, I'll write the row players payouts first. This is a little misleading because we normally put the payoff of the first mover first. But it will fit better with how I'll use the game in a few paragraph.)

|       |     P1     |     P2      |
|------:|:----------:|:-----------:|
|  AA   |  \$1, \$2  |  \$2, \$1   |
|  AR   |  \$2, \$1  |  \$0, \$0   |
|  RA   |  \$0, \$0  |  \$1, \$2   |
|  RR   |  \$0, \$0  |  \$0, \$0   |

:  Ultimatum game {#tbl-ultimatum}

Assuming both players prefer more money to less, there are three Nash equilibria of this game: (P2, AA), (P2, RA), and (P1, AR). 



 