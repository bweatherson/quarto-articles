---
title: "Four Problems in Decision Theory"
description: |
  In recent years the literature on decision theory has become disjointed. There isn't as much discussion as there should be on how different problems impact one another. This paper aims to bring together work on problems involving demons, problems about attitudes to risk, problems about incomplete preferences, and problems about dynamic choice. In the first three of these cases, I end up defending a pre-existing view. I defend a ratificationist approach to problems with demons, the orthodox expected utility approach to risk, and the permissibility of incomplete preferences. These views are familiar, but seeing how they are related to a common strengthens the case for each of them. The most novel part of the view is the theory of dynamic choice that I offer: a sequence of choices is rational only if both the so-called 'resolute' and 'sophisticated' theories of dynamic choice would permit it. This theory would be implausible if paired with many rival solutions to the first three problems, but fits nicely with the view I'll develop through the paper.
date: March 5 2024
author:
  - name: Brian Weatherson 
    url: http://brian.weatherson.org
    affiliation: University of Michigan
    affiliation_url: https://umich.edu
    orcid_id: 0000-0002-0830-141X
citation: false
categories:
  - games and decisions
  - unpublished
format:
  html: default
  docx: default
  pdf:
    output-file: "Four Problems in Decision Theory"
    include-after-body: 
      text: |
         Unpublished. Posted online in 2024.
---

Contemporary decision theory has become disjointed. There is less overlap than there should be in work on adjacent problems. This paper aims to undo some of that, by showing that four problems that have largely been worked on in isolation cast useful light on each other. In particular, I'll argue that we can go a long way towards solving all four problems by working through the consequences of a plausible principle that I'll call the Single Choice Principle.

The Single Choice Principle (hereafter, SCP) relates theories of static choice and dynamic choice. In particular, it says that for a narrow class of games, it doesn't matter whether you think of the game as involving a static, strategic choice, or a dynamic choice that is made during a game. One way into the principle is to think about an oddity in the way Newcomb's Problem is normally introduced.

# Newcomb's Problem

## Standard Version

In the standard vignette that goes with Newcomb's Problem, it is a dynamic game. The demon makes a *prediction*, and then the human (hereafter, Chooser) makes a choice. Chooser doesn't know what Demon did, but they do know that Demon has acted. So the natural presentation of Newcomb's Problem is in a tree like @fig-standard-newcomb.^[I'll assume $1,000 is worth 1 util. I think this assumption of constant marginal utility is close to incoherent, and it will get relaxed later, but it's harmless for now.]


::: {.panel-tabset}

## Tree

```{r engine='tikz'}
#| label: fig-standard-newcomb
#| fig.cap: "Newcomb's Problem."
#| fig.ext: 'png'
#| cache: TRUE
#| echo: FALSE
#| fig.width: 4

\usetikzlibrary{calc}

\begin{tikzpicture}[scale=1.4,font=\footnotesize]
  \tikzset{
    % Three node styles for game trees: solid and hollow and square
      solid node/.style={circle,draw,inner sep=1.5,fill=black},
      hollow node/.style={circle,draw,inner sep=1.5},
      square node/.style={rectangle,draw, inner sep = 1, fill = black}
      }

  % Specify spacing for each level of the tree
  \tikzstyle{level 1}=[level distance=12mm,sibling distance=25mm]
  \tikzstyle{level 2}=[level distance=15mm,sibling distance=15mm]
  \tikzstyle{level 3}=[level distance=13mm,sibling distance=11mm]
      
      \node[hollow node,label=above:{Demon}]{}
        child { node (1)[solid node] {}
          child { 
            node {1000}
            edge from parent
              node[left] {1}}
          child { 
            node {1001}
            edge from parent
              node[right] {2}}
          edge from parent
            node[left] {P1}}
        child { node (2)[solid node] {}
          child { 
            node {0}
            edge from parent
              node[left] {1}}
          child { 
            node {1}
            edge from parent
              node[right] {2}}
          edge from parent
            node[right] {P2}};
% information set
\draw[dashed,rounded corners=10]($(1) + (-.2,.2)$)rectangle($(2) +(.2,-.2)$);
\node at ($(1)!.5!(2)$) {Chooser};

\end{tikzpicture}
```

## Table

|       |       P1      |     P2     |
|:-----:|:-------------:|:----------:|
|  1    |     1000      |     0      |
|  2    |     1001      |     1      |

: Newcomb's Problem {#tbl-standard-newcomb}
:::

I'll go over the details of how to read diagrams like @fig-standard-newcomb in [insert cross-ref here!]. All you need to know for now is that the game starts at the open node, here at the top, and it moves along by the agent (Demon or Chooser) making choices. The dotted lines around the two nodes where Chooser acts mean that those two nodes are in the same **information set**. That is, when Chooser is at either one of those nodes, the strongest thing Chooser knows is that they are somewhere or other in the set.^[This formalism only really makes sense if we presuppose the right epistemic logic is S5, and there are good reasons to not make that assumption in general [@Humberstone2016 380-402]. For this paper we'll treat it as a simplifying assumption that really should be relaxed in subsequent work.] So this tree represents the standard vignette for Newcomb's Problem. Demon makes a prediction - I'm in general using PX for Demon predicting X - and Chooser knows that the prediction has been made, and that either P1 or P2 happened, but chooses without knowing which it is. Then the game is resolved.

What @tbl-standard-newcomb shows is a subtly different story. In @tbl-standard-newcomb, each player chooses a *strategy*. A strategy for a player in a tree like @fig-standard-newcomb is a decision about what to do at each node in the tree where that player has to move.^[In game theory, it is usually specified that strategies include decisions about what to do at nodes that are ruled out by earlier moves in that very strategy. In theory I'm assuming this whenever I talk about strategies; in practice it doesn't matter for any application in this paper.] So what @tbl-standard-newcomb represents is a situation where each player chooses a strategy simultaneously, and that determines a result for the game. It differs from @fig-standard-newcomb in part in that it's symmetric; there is no hint that Demon moves first.

There is a lot of disagreement about Newcomb's Problem, but here is one point of universal agreement: @fig-standard-newcomb and @tbl-standard-newcomb have the same solutions. It would be incoherent to prefer taking 1 box in one of these puzzles and 2 boxes in the other, or to say that both options were choice-worthy in one puzzle but not the other. They may not represent exactly the same problem, they don't pose exactly the same question to Chooser, but they should get the same answer (or answers).

I'm going to agree with the unanimous verdict on this point, but I'll start dissenting very soon. And one way into my dissent is to ask, why should @fig-standard-newcomb and @tbl-standard-newcomb get the same answer? What principle is someone who gives different answers to the two questions violating? I have a suggestion for what principle that might be, the SCP, but to make that suggestion plausible we need a couple more examples.

## Variant 1: Coin-then-Demon

Consider a variant on Newcomb's Problem I'll call Coin-Then-Demon. In this game a fair coin will be flipped and shown to Demon and Chooser. If it lands Heads, Chooser will get $5,000 and the game ends. Otherwise, they play standard Newcomb Problem. @fig-coin-then-demon shows the game tree for this game, with Nature moving first, and the probabilities of Nature's moves shown. And @tbl-coin-then-demon shows the strategy table for it, with the payouts shown in expected value.^[I will drop the assumption that Chooser maximises expected value in @sec-buchak, but it's a harmless assumption for now.]

::: {.panel-tabset}

## Tree

```{r engine='tikz'}
#| label: fig-coin-then-demon
#| fig.cap: "Coin-then-Demon"
#| fig.ext: 'png'
#| cache: TRUE
#| echo: FALSE
#| fig.width: 4

\usetikzlibrary{calc}

\begin{tikzpicture}[scale=1.4,font=\footnotesize]
  \tikzset{
    % Three node styles for game trees: solid and hollow and square
      solid node/.style={circle,draw,inner sep=1.5,fill=black},
      hollow node/.style={circle,draw,inner sep=1.5},
      square node/.style={rectangle,draw, inner sep = 1, fill = black}
      }

  % Specify spacing for each level of the tree
  \tikzstyle{level 1}=[level distance=12mm,sibling distance=25mm]
  \tikzstyle{level 2}=[level distance=15mm,sibling distance=15mm]
  \tikzstyle{level 3}=[level distance=13mm,sibling distance=11mm]
      \node[hollow node,label=above:{Nature}]{}
      child{
          node{5}
          edge from parent
            node[left] {H (0.5)}
      }
      child {node[hollow node,label=right:{Demon}]{}
        child { node (1)[solid node] {}
          child { 
            node {1000}
            edge from parent
              node[left] {1}}
          child { 
            node {1001}
            edge from parent
              node[right] {2}}
          edge from parent
            node[left] {P1}}
        child { node (2)[solid node] {}
          child { 
            node {0}
            edge from parent
              node[left] {1}}
          child { 
            node {1}
            edge from parent
              node[right] {2}}
          edge from parent
            node[right] {P2}}
        edge from parent
            node[right] {T (0.5)}};
% information set
\draw[dashed,rounded corners=10]($(1) + (-.2,.2)$)rectangle($(2) +(.2,-.2)$);
\node at ($(1)!.5!(2)$) {Chooser};

\end{tikzpicture}
```

## Table

|       |       P1      |     P2     |
|:-----:|:-------------:|:----------:|
|  1    |     502.5      |     2.5      |
|  2    |     503      |     3      |

: Coin-then-Demon {#tbl-coin-then-demon}
:::

I have two hypotheses about @fig-coin-then-demon/@tbl-coin-then-demon; one of which I think everyone will agree with, and one that might be more controversial. The less controversial hypothesis is that in this game, as in standard Newcomb's Problem, it doesn't matter whether Chooser is playing the dynamic game (i.e., @fig-coin-then-demon) or the strategic game (i.e., @tbl-coin-then-demon). Whichever options are choice-worthy in one are choice-worthy in the other. The more controversial hypothesis is that the reason these two games are rationally equivalent is exactly the same as the reason that the two forms of Newcomb Problem I presented should get the same answer.

## Variant 2: Demon-then-Coin

One more example and we're basically done. In the game I'll call Demon-Then-Coin, the coin is only flipped if Demon predicts Chooser takes one box. If the coin lands heads, Chooser gets $5,000, and the game ends. If either Demon predicts 2 boxes, or the coin lands tails, Chooser makes a selection, knowing that one or other of these disjuncts obtained. Then the game ends. The tree for this game is @fig-demon-then-coin, and the strategy table is @tbl-demon-then-coin.

::: {.panel-tabset}

## Tree

```{r engine='tikz'}
#| label: fig-demon-then-coin
#| fig.cap: "Demon-then-Coin"
#| fig.ext: 'png'
#| cache: TRUE
#| echo: FALSE
#| fig.width: 4

\usetikzlibrary{calc}

\begin{tikzpicture}[scale=1.4,font=\footnotesize]
  \tikzset{
    % Three node styles for game trees: solid and hollow and square
      solid node/.style={circle,draw,inner sep=1.5,fill=black},
      hollow node/.style={circle,draw,inner sep=1.5},
      square node/.style={rectangle,draw, inner sep = 1, fill = black}
      }

  % Specify spacing for each level of the tree
  \tikzstyle{level 1}=[level distance=12mm,sibling distance=25mm]
  \tikzstyle{level 2}=[level distance=13mm,sibling distance=13mm]
  \tikzstyle{level 3}=[level distance=13mm,sibling distance=13mm]
      
      \node[hollow node,label=above:{Demon}]{}
        child { node [solid node,label=right:{Nature}] {}
          child { 
            node {5}
            edge from parent
              node[left] {H (0.5)}
              }
          child { 
            node (1)[solid node]{}
              child{
                node{1000}
                edge from parent
                  node[left]{1}
              }
              child{
                node{1001}
                edge from parent
                  node[right]{2}
              }
            edge from parent
              node[right] {T (0.5)}}
          edge from parent
            node[left] {P1}}
        child [level distance=25mm,sibling distance=25mm]{ node (2)[solid node] {}
          child { 
            node{0}
            edge from parent
              node[left] {1}}
          child { 
            node{1}
            edge from parent
              node[right] {2}}
          edge from parent
            node[right] {P2}};
% information set
\draw[dashed,rounded corners=10]($(1) + (-.2,.2)$)rectangle($(2) +(.2,-.2)$);
\node at ($(1)!.5!(2)$) {Chooser};
\end{tikzpicture}
```

## Table

|       |       P1      |     P2     |
|:-----:|:-------------:|:----------:|
|  1    |     502.5      |     0      |
|  2    |     503      |     1      |

: Demon-then-Coin {#tbl-demon-then-coin}
:::

If Chooser was planning on picking 1 box, they have a little evidence against the accuracy of Demon's predictions. If in the other games they thought the probability that Demon mispredicted was *e*, in this case they should (if they plan to choose 1 box) have a probability of error of roughly 2*e*. But if *e* was small enough to start with, and I'll assume throughout that Demon's error likelihood is arbitrarily small, this shouldn't make a difference.

Again, I'm going to argue that the dynamic game, @fig-demon-then-coin, and the strategic game, @tbl-demon-then-coin, should get the same solutions. Indeed, they should get the same solutions for the same reason the previous two pairs of 

## Single Choice Principle

Quote the definition

# Defending the SCP {#sec-scp-defence}

## Ramsey Test

## Unifying the Examples

## Intuitions about Change

## No Reward

Stress that asymmetry cases are most plausible when the strategy suggests that you'll actually make the dodgy choice with very low probability.

## Sure Thing

# The Four Problems

## Demonic Problems

Stress the Stag Hunt and coordination games

## Buchak {#sec-buchak}

## Incomplete Preferences

## Dynamic Choice

# Ratificationism

Go over the 4,3,2 game

Show that CDT, EDT, and most other views violate SCP

# Expected Value

Buchak stuff, goes really fast

# Incomplete Preferences

Again, the 4,3,2 shows this really quickly, I think this is already written

# Dynamic Choice

This takes much more time.

# Conclusion

Paragraph about how this connects to game theory

Summary of what we've shown.

