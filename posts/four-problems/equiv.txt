# The Single Choice Principle

## Equivalence Principles

Each decision tree has an associated strategic decision problem. This section is about when the rational solutions to the two are, in a sense, the same. Making that sense precise takes a bit of care. In a tree, Chooser selects a _sequence_ of moves; in a problem they select a _strategy_. Strategies are more general than sequences; they include what to do at nodes that aren't reached. Say a strategy **extends** a sequence of moves iff the strategy agrees with a sequence of moves iff for every move in the sequence, the strategy says to perform that move if the node the move is at is reached.

For a particular tree-problem pair, say that the pair is *rationally equivalent* iff the following two conditions hold.

- For each sequence of rational moves through the tree, there is some strategy extending that sequence that is a rational play in the problem.
- For each strategy that is a rational move in the problem, there is some sequence of rational moves in the tree which that strategy extends, and such that every move.

Say a set of pairs is rationally equivalent iff every member of the set is rationally equivalent. Then one very general question we can ask is which sets are rationally equivalent. Orthodox decision theory says that the set of pairs where there are no nodes at which Demon moves are rationally equivalent. Buchak's theory denies this. One could try to turn that into an argument against 

-------

# The Single Choice Principle

## Equivalence Principles

In @dynamic-choice, I set out two ways of describing certain problems: as decision trees and as strategy tables. You might wonder whether this is just notational variation. Do the tree and its associated table represent the same problem? Or, at least, do they represent problems that have the same answers for deep reasons.

At first glance, the answer to this question is obviously no. The problems have different kinds of answers. Consider the following game.

1. First, Demon chooses Left or Right.
2. Then, after Demon's choice is revealed, Chooser selects Up or Down.
3. If Chooser selects Down, they get 1. If Chooser selects Up, they get 3 if Demon chose Left, and 0 if Demon chose Right.
4. Demon's choice was driven by their (very accurate) prediction of Chooser's strategy. If they predicted Chooser would adopt the strategy (Up-if-Left, Up-if-Right), they chose Left; otherwise they chose Right.

@fig-first-dynamic is the tree for the game, and @tbl-first-dynamic is the strategy table for it. (In the table, and from now on when discussing this game, I'll use XY to mean the strategy (X-if-Left, Y-if-Right). So UU is the strategy of going Up whatever Demon does.) The way to read figures like @fig-first-dynamic is to start at the open square. In this case, it's in the middle of the figure. That's the origin of the game. Lines between nodes show what can be reached from one node. These are directional, but I won't include arrows because the position of the origin determines the direction. The circle nodes are points where a choice is to be made, and each such node is labelled with who makes the choice. The square nodes are terminal nodes, and they are labelled with values showing Chooser's payout if that node is reached. 

[Include figure]

[Include table]

Call a *run* through the game a sequence of moves from the origin to a terminal node. A run through the game is *rational* iff every move Chooser makes is rational. Now we can phrase the questions from the opening paragraph of this section a bit more precisely. What is the relationship between rational runs through trees like @fig-first-dynamic, and rational strategies in tables like @tbl-first-dynamic? And we can see an immediate complication. In any run through the tree, Chooser makes one binary selection; but to select a strategy is to make two binary selections.

There is a simple way around this problem. (What I'm about to describe is too simplistic for many purposes, but it will do for ours.) Say that a tree and its associated table are *dynamically-strategically equivalent*, for short *ds-equivalent*, iff the following two conditions are met.

1. For any rational run through the tree, there is a rational strategy in the table that agrees with the run on what to do at nodes where Chooser actually made choices during the run.
2. For any rational strategy in the table, any run that follows this strategy is rational.

Then say a class of tree-table pairs is ds-equivalent iff every member of the class is. With those definitions on board, we can ask a bunch of questions.

- Is the class of all tree-table pairs ds-equivalent?
- Is the class of all tree-table pairs that don't involve demons ds-equivalent?
- Is the class of all tree-table pairs where Chooser moves at most once in each run ds-equivalent?

And this list is obviously not exhaustive.

A positive answer to the first question would render all the other questions redundant. And a positive answer there is not completely implausible. But most decision theorists would answer it negatively. Many would say that @fig-first-dynamic/@tbl-first-dynamic is already a counterexample. In @fig-first-dynamic the only rational strategy is UD. By the time Chooser moves, there is no uncertainty; Chooser just selects the larger or the smaller value, and larger is better. On the other hand, many theories say that UU is a rational strategy in @tbl-first-dynamic. Evidential Decision Theory says this, but so do some Causal Decision Theories. Whether this is plausible or not turns on tricky questions about the normative significance of Weak Dominance reasoning, and on whether we should thin of Demon as perfectly accurate or just arbitrarily accurate. For what it's worth, I think the only rational move in @tbl-first-dynamic is UD, so I think this pair is ds-equivalent. But I do not think that's obvious, and I certainly don't think it could be a premise in an argument for or against any decision theory.

There is a much more restricted ds-equivalence claim that can properly serve as a premise in reasoning about decision theory, and it's time to introduce it.