---
title: "Age, Period, and Cohort Effects in Philosophy Journal Citations"
abstract: |
  There are extremely strong age and period effects in citations in philosophy journals. The age effect is that citations are concentrated on articles published two to five years prior. The period effect is that recent years have seen an explosion in the number of articles published, and the number of citations per articles, so many articles are getting more citations per year than they ever had previously. But cohort effects are trickier to detect. In this note I argue that they exist. There are more citations to articles from eras of more dramatic change in philosophy, such as around 1970 and around 2010. And there are fewer citations to articles from periods of consolidation, especially in the late 1970s through the 1980s.
date: July 10 2024
draft: true
execute:
  echo: false
  warning: false
author:
  - name: Brian Weatherson 
    url: http://brian.weatherson.org
    affiliation: University of Michigan
    affiliation_url: https://umich.edu
    orcid_id: 0000-0002-0830-141X
citation: false
categories:
  - history of analytic
  - unpublished
bibliography: ../../../brian-quarto.bib
csl: ../../../chicago-with-note.csl
format:
  html:
    fig-format: svg
    fig-width: 10
    fig-height: 7
  docx:
      reference-doc: ../../../quarto-articles-template.docx
  pdf:
    output-file: "Age, Period, and Cohort Effects in Philosophy Journal Citations"
    include-after-body: 
      text: |
         \noindent Unpublished. Posted online in 2024.
---

```{r}
#| label: loader
#| cache: false

require(tidyverse)
require(slider)
require(stringr)
require(knitr)
require(lsa)

if(knitr::is_latex_output()) {
  knitr::opts_chunk$set(dev = 'cairo_pdf')
}

# Graph Themes
old <- theme_set(theme_minimal())
theme_set(old)
theme_update(plot.title = element_text(family = "Scala Sans Pro", size = 24, face = "bold"),
             plot.subtitle = element_text(family = "Scala Sans Pro", size = 20),
             axis.text = element_text(family = "Scala Sans Pro", size = 18),
             axis.title = element_text(family = "Scala Sans Pro", size = 16),
             plot.background = element_rect(fill = "#F9FFFF"),
             panel.background = element_rect(fill = "white"),
             legend.background = element_rect(fill = "#F9FFFF"),
             panel.grid = element_line(color = "grey92"),
             legend.text = element_text(family = "Scala Sans Pro", size = 20),
             legend.title = element_text(family = "Scala Sans Pro", size = 20),
             strip.text.x = element_text(family = "Scala Sans Pro", size = 20),
             legend.key.spacing.y = unit(0.5, 'lines'),
             legend.key.spacing.x = unit(1, 'cm')
  )

if(knitr::is_latex_output()) {
theme_update(plot.title = element_text(family = "Europa-Bold", size = 14),
             plot.subtitle = element_text(family = "EB Garamond", size = 11),
             axis.text = element_text(family = "EB Garamond", size = 10),
             plot.background = element_rect(fill = "white"),
             panel.background = element_rect(fill = "white"),
             legend.background = element_rect(fill = "white"),
             panel.grid = element_line(color = "grey92"),
             legend.text = element_text(family = "EB Garamond", size = 11),
            legend.title = element_text(family = "EB Garamond", size = 11),
             strip.text = element_text(family = "EB Garamond", size = 12),
             legend.key.spacing.y = unit(0.5, 'lines'),
             legend.key.spacing.x = unit(0, 'cm')
  )
}
```

```{r}
#| label: buildgraphs
#| cache: false

require(tidyverse)
require(slider)
require(stringr)

load("philo_bib_fix.RData")
load("philo_cite_with_jp.RData")

start_year <- 1956
end_year <- 2022
window <- 0
min_data <- 8

active_philo_bib <- philo_bib_fix |>
  filter(year >= start_year, year <= end_year)

active_philo_cite <- philo_cite_with_jp 

authadjust <- function(x){
  paste0(str_extract(x, '\\b[^,]+$'), " ", str_to_title(str_extract(x,".+(?=,)")))
}

authadjust_short <- function(x){
  str_to_title(str_extract(x,".+(?=,)"))
}

article_years <- active_philo_bib |>
  as_tibble() |>
  select(id, year)

citation_tibble <- active_philo_cite |>
  as_tibble() |>
  rename(new = id, old = refs) |>
  left_join(article_years, by = c("old" = "id")) |>
  rename(old_year = year)  |>
  left_join(article_years, by = c("new" = "id")) |>
  rename(new_year = year) |>
  filter(old_year >= start_year,
         new_year <= end_year,
         old_year >= start_year,
         new_year <= end_year)

# Now a tibble of how many times articles in year x are cited in year y

year_in_year_out <- citation_tibble |>
  group_by(old_year, new_year) |>
  tally(name = "citations") |> # Now add the 'missing' pairs
  ungroup() |>
  complete(old_year, new_year, fill = list(citations = 0))

# Tibble for raw citation age

raw_age_tibble <- citation_tibble |>
  mutate(age = new_year - old_year) |>
  group_by(age) |>
  tally(name = "count")

raw_age_plot <- raw_age_tibble |>
  ggplot(aes(x = age, y = count)) +
  geom_point() + # Using geom_line makes it not obvious how many points there are, because it is *so* straight
  xlab('Age of citation') +
  ylab('Number of citations')

# There are enough at 0 for me to count same year as 'available'. I wasn't initially going to do that, but it's 2.2%
# Now how many articles published each year, and the cumulative total, i.e., the 'available' articles

# Tibble for number of publications each year, and cumulative, or 'available'

articles_per_year <- active_philo_bib |>
  rename(old_year = year) |>
  group_by(old_year) |>
  tally(name = "articles") |>
  mutate(available = cumsum(articles))

articles_per_year_plot <- articles_per_year |>
  ggplot(aes(x = old_year, y = articles)) +
  geom_point() +
  xlab(element_blank()) +
  ylab("Number of indexed articles")

# Same for citations

citations_per_year <- citation_tibble |>
  group_by(new_year) |>
  tally(name = "citations") 

citations_per_year_plot <- citations_per_year |>
  ggplot(aes(x = new_year, y = citations)) +
  geom_point() +
  xlab(element_blank()) +
  ylab("Citations to indexed articles")

# Citations per available article

citation_rate_per_year <- citations_per_year |>
  left_join(articles_per_year, by = c("new_year" = "old_year")) |>
  mutate(mean_cites = citations/available)

citation_rate_per_year_plot <- citation_rate_per_year |>
  ggplot(aes(x = new_year, y = mean_cites)) +
  geom_point() +
  xlab(element_blank()) +
  ylab("Annual citation rate of available articles.")

# How many articles each year are never cited 

list_of_cited_articles <- citation_tibble |> group_by(old) |> tally() |> arrange(old)

never_cites <- active_philo_bib |>
  arrange(id) |>
  anti_join(list_of_cited_articles, by = c("id" = "old")) |>
  group_by(year) |>
  tally(name = "never_cited") |>
  rename(old_year = year)

never_cites_graph <- never_cites |>
  ggplot(aes(x = old_year, y = never_cited)) +
  geom_point() +
  xlab(element_blank()) +
  ylab("Number of uncited articles published each year.")

never_cited_total <- sum(never_cites$never_cited)

percent_uncited <- never_cites |>
  left_join(articles_per_year, by = "old_year") |>
  mutate(uncited_ratio = never_cited/articles)

percent_uncited_plot <- percent_uncited |>
  ggplot(aes(x = old_year, y = uncited_ratio)) +
  geom_point() +
  xlab(element_blank()) +
  ylab("Proportion of uncited articles each year") +
  ylim(c(0,1))

# Plot how often articles are cited - final graph is log on both dimensions, and some jitter added

article_times_cited <- citation_tibble |>
  group_by(old) |>
  tally(name = "citations")

count_of_citations <- article_times_cited |>
  ungroup() |>
  group_by(citations) |>
  tally(name = "number_of_articles")

count_of_citations_plot <- count_of_citations |>
  ggplot(aes(x = citations, y = number_of_articles)) +
  xlab("Number of times cited") +
  ylab("Number of articles") +
  scale_x_log10() +
  scale_y_log10() +
  geom_jitter(height = 0.05)

# Same for number of outbound citations in each article

article_times_citing <- citation_tibble |>
  group_by(new) |>
  tally(name = "citations")

count_of_citations_out <- article_times_citing |>
  ungroup() |>
  group_by(citations) |>
  tally(name = "number_of_articles")

count_of_citations_out_plot <- count_of_citations_out |>
  ggplot(aes(x = citations, y = number_of_articles)) +
  xlab("Number of outbound citations") +
  ylab("Number of articles") +
  scale_y_log10() +
  geom_jitter(height = 0.05)

# Find the outliers

most_cited_articles <- article_times_cited |>
  slice_max(order_by = citations, n = 10) |>
  left_join(select(philo_bib_fix, id, full_cite), by = c("old" = "id")) |>
  select(Article = full_cite, Citations = citations)


most_citing_articles <- article_times_citing |>
  slice_max(order_by = citations, n = 10) |>
  left_join(select(philo_bib_fix, id, full_cite), by = c("new" = "id")) |>
  select(Article = full_cite, `Articles Cited` = citations)

# Compare mean per year to mean per available

age_effect_tibble <- year_in_year_out |>
  filter(old_year >= start_year, old_year <= end_year + 1 - min_data - window, new_year >= start_year) |>
  left_join(articles_per_year, by = "old_year") |>
  select(-available) |>
  left_join(select(
    citation_rate_per_year, new_year, mean_cites
  ), by = "new_year") |>
  mutate(cite_ratio = citations/(articles * mean_cites))

age_effect_tibble_plot <- age_effect_tibble |>
  filter(old_year >= start_year, old_year <= end_year + 1 - min_data - window, new_year >= start_year) |>
  ggplot(aes(x = new_year, y = cite_ratio)) +
  geom_point(size = 0.3) +
  facet_wrap(~old_year, ncol = 6) +
  xlab(element_blank()) +
  ylab(element_blank()) +
  theme(axis.text = element_text(size = 10),
        strip.text = element_text(size = 12))

age_effect_grouped <- age_effect_tibble |>
  filter(new_year >= old_year) |>
  filter(new_year <= old_year + end_year - start_year + 1 - window - min_data) |>
  mutate(the_age = new_year - old_year) |>
  group_by(the_age) |>
  summarise(mean_effect = mean(cite_ratio))

age_effect_tibble_adj <- age_effect_tibble |>
  filter(new_year >= old_year) |>
  filter(new_year <= old_year + old_year + end_year - start_year + 1 - window - min_data) |>
  mutate(the_age = new_year - old_year) |>
  left_join(age_effect_grouped, by = "the_age")

age_effect_grouped_plot <- age_effect_grouped |>
  ggplot(aes(x = the_age, y = mean_effect)) +
  geom_point() +
  xlab("Article age") +
  ylab("Mean citation ratio")

age_effect_everything_plot <- age_effect_tibble_adj |>
  ggplot(aes(x = the_age, y = cite_ratio, color = as.factor(old_year))) +
  geom_jitter(aes(size=(old_year==1973 | old_year ==1985)), alpha = 1) +
  scale_size_manual(values=c(0.3,3)) +
  xlab("Age of cited articles") +
  ylab("Citation ratio") +
  geom_line(aes(x = the_age, y = mean_effect), color = "black") +
  theme(legend.position = "none")
  
year_by_year_with_effect <- year_in_year_out |>
  filter(new_year >= old_year) |>
  filter(new_year <= old_year + end_year - start_year + 1 - window - min_data) |>
  filter(old_year >= start_year, old_year <= end_year - window - min_data + 1, new_year >= start_year + min_data) |>
  mutate(the_age = new_year - old_year) |>
  left_join(age_effect_grouped, by = "the_age") |>
  left_join(
    select(
      age_effect_tibble, old_year, new_year, cite_ratio
    ), by = c("old_year", "new_year")
  ) |>
  mutate(surplus = cite_ratio - mean_effect) |>
  arrange(-surplus)

# The next one calculates the difference between each year and the average. 
# But this has odd effects at the periphery, and compares each year to something it is part of.
# Below, in yiyo_extended, I try to work out what happens when each year is compared to the other years
# This is more work because you have to calculate the 'other years' value again each time

year_by_year_average <- year_by_year_with_effect |>
  group_by(old_year) |>
  summarise(mean_surplus = mean(surplus))

year_by_year_average_plot <- year_by_year_average |>
  ggplot(aes(x = old_year, y = mean_surplus)) +
  geom_point()

#year_by_year_average_plot

yiyo_extended <- year_in_year_out |>
  filter(old_year >= start_year,
         new_year >= start_year + min_data,
         old_year <= end_year + 1 - min_data - window,
         new_year >= old_year + window) |> # First remove years where we don't have min_data years to compare, or min_data data points
  mutate(age = new_year - old_year) |>
  filter(age <= end_year - start_year + 1 - min_data - window) |> # Again, only looking at things where there are min_data comparisons
  left_join(
    select(
      articles_per_year, 
      old_year,
      articles),
    by = "old_year" 
    ) |> # How many articles were published in old_year  
  left_join(
    select(
      articles_per_year, 
      old_year,
      available),
    by = c("new_year" = "old_year")
    ) |> # How many articles were out at new_year
  ungroup() |>
  group_by(new_year) |>
  mutate(cites_that_year = sum(citations)) |>
  ungroup() |>
  mutate(old_year_cite_rate = citations/articles) |>
  mutate(other_cite_rate = (cites_that_year - citations)/(available-articles)) |>
  mutate(surplus = old_year_cite_rate/other_cite_rate) |>
  group_by(age) |>
  mutate(age_effect = mean(surplus)) |>
  ungroup() |>
  mutate(age_adj_surplus = surplus - age_effect)
  
yiyo_summary <- yiyo_extended |>
  ungroup() |>
  group_by(old_year) |>
  summarise(cohort_effect = mean(age_adj_surplus)) |>
  arrange(cohort_effect)

yiyo_summary_plot <- yiyo_summary |> 
    ggplot(aes(x = old_year, y = cohort_effect)) + 
    geom_point() +
    xlab(element_blank()) +
    ylab("Mean adjusted citation rate")

year_to_mean <- function(x){
  yiyo_extended |>
    filter(old_year == x) |>
    ggplot(aes(x = age, y = surplus)) + 
    geom_point() +
    geom_line(aes(x = age, y = age_effect))
}
```

```{r}
#| label: fig-rawage
#| fig-cap: "The age distribution of citations in the dataset."
raw_age_plot
```

```{r}
#| label: fig-articlesperyear
#| fig-cap: "The number of articles in the dataset published each year."

articles_per_year_plot
```

```{r}
#| label: fig-citationsperyear
#| fig-cap: "The number of citations in the dataset made each year."

citations_per_year_plot
```

```{r}
#| label: fig-citationrateperyear
#| fig-cap: "The average number of citations already published articles received that year."

citation_rate_per_year_plot
```

```{r}
#| label: fig-nevercites
#| fig-cap: "The number of articles published each year with no citations in the dataset."

never_cites_graph
```

```{r}
#| label: fig-percentuncited
#| fig-cap: "The percentage of articles published each year with no citations in the dataset."

percent_uncited_plot
```

```{r}
#| label: fig-countofcitations
#| fig-cap: "The distribution of inbound citations per article, on a log scale with jitter added."

count_of_citations_plot
```

```{r}
#| label: fig-countofcitationsout
#| fig-cap: "The distribution of outbound citations per article, with y-axis on log scale and with jitter added."

count_of_citations_out_plot
```

```{r}
#| label: tbl-mostcited
#| tbl-cap: "The most cited articles in the dataset."

kable(most_cited_articles)
```

```{r}
#| label: tbl-mostciting
#| tbl-cap: "The articles that make the most citations in the dataset."

kable(most_citing_articles)
```

```{r}
#| label: fig-ageeffecttibble
#| fig-cap: "Each facet shows the relative citation rate for articles published that year at different ages."
#| fig-column: screen-inset

age_effect_tibble_plot +
    theme(
        axis.text = element_text(family = "Scala Sans Pro", size = 8),
        axis.title = element_text(family = "Scala Sans Pro", size = 5),
        strip.text.x = element_text(family = "Scala Sans Pro", size = 8, margin = margin(0,0,0,0, "cm"))
    )
```

```{r}
#| label: fig-ageeffectgrouped
#| fig-cap: "Mean age effects."

age_effect_grouped_plot
```

```{r}
#| label: fig-ageeffecteverything
#| fig-cap: "All age effects on a single graph, with 1973 and 1985 highlighted."

age_effect_everything_plot
```

```{r}
#| label: fig-cohortsummary
#| fig-cap: "Citation rate for articles published each year after adjusting for age and period effects."

yiyo_summary_plot
```

```{r}
#| label: fig-ytm1973
#| fig-cap: "Citation rate for articles published in 1973 at various ages, adjusted for period and compared to mean for that age."

year_to_mean(1973)
```

```{r}
#| label: fig-ytm1980
#| fig-cap: "Citation rate for articles published in 1980 at various ages, adjusted for period and compared to mean for that age."

year_to_mean(1980)
```

```{r}
#| label: fig-ytm1985
#| fig-cap: "Citation rate for articles published in 1985 at various ages, adjusted for period and compared to mean for that age."

year_to_mean(1985)
```

```{r}
#| label: fig-ytm2007
#| fig-cap: "Citation rate for articles published in 2007 at various ages, adjusted for period and compared to mean for that age."

year_to_mean(2007)
```