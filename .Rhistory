# Calculate Log inaccuracy
logacc_a <- -log(a_posterior) - log(1 - b_posterior) - log(1 - c_posterior)
logacc_b <- -log(b_posterior) - log(1 - c_posterior) - log(1 - a_posterior)
logacc_c <- -log(c_posterior) - log(1 - a_posterior) - log(1 - b_posterior)
# Then overall log
logacc_t <- a_prob * logacc_a + b_prob * logacc_b + c_prob * logacc_c
logacc_t / 3
}
# Find new ratio of a to a+b
for (new_a in (0:00)/100){
acc_tibb <- tibble(c = 5:((1-new_a)*1000-5) * 0.001) |>
mutate(brier = find_brier(c))
#, logacc = find_logacc(c))
brier_min <- acc_tibb  |> slice_min(order_by = brier, n = 1)
#logacc_min <- acc_tibb  |> slice_min(order_by = logacc, n = 1)
limit_tib <- limit_tib |>
add_row(a = new_a, best_brier = brier_min$c[1], best_log = 0)#logacc_min$c[1])
}
View(acc_tibb)
# Letting new_a <- 0 and finding limit value of c
require(tidyverse)
# Initial probability weights
a_weight <- 1
b_weight <- 1
c_weight <- 4
t_weight <- a_weight + b_weight + c_weight
# Turn them into probabilities
a_prob <- a_weight / t_weight
b_prob <- b_weight / t_weight
c_prob <- c_weight / t_weight
limit_tib <- tribble(
~a, ~best_brier, ~best_log)
find_brier <- function(c_posterior){
a_posterior <- new_a
b_posterior <- 1 - new_a - c_posterior
# Calculate Brier inaccuracy
# First Brier if each is true
brier_a <- (1 - a_posterior)^2 + b_posterior^2 + c_posterior^2
brier_b <- (1 - b_posterior)^2 + c_posterior^2 + a_posterior^2
brier_c <- (1 - c_posterior)^2 + a_posterior^2 + b_posterior^2
# Then overall Brier
brier_t <- a_prob * brier_a + b_prob * brier_b + c_prob * brier_c
brier_t / 3
}
find_logacc <- function(c_posterior){
# calculate a and b
a_posterior <- new_a
b_posterior <- 1 - new_a - c_posterior
# Calculate Log inaccuracy
logacc_a <- -log(a_posterior) - log(1 - b_posterior) - log(1 - c_posterior)
logacc_b <- -log(b_posterior) - log(1 - c_posterior) - log(1 - a_posterior)
logacc_c <- -log(c_posterior) - log(1 - a_posterior) - log(1 - b_posterior)
# Then overall log
logacc_t <- a_prob * logacc_a + b_prob * logacc_b + c_prob * logacc_c
logacc_t / 3
}
# Find new ratio of a to a+b
for (new_a in (0:00)/100){
acc_tibb <- tibble(c = 0:((1-new_a)*1000-0) * 0.001) |>
mutate(brier = find_brier(c))
#, logacc = find_logacc(c))
brier_min <- acc_tibb  |> slice_min(order_by = brier, n = 1)
#logacc_min <- acc_tibb  |> slice_min(order_by = logacc, n = 1)
limit_tib <- limit_tib |>
add_row(a = new_a, best_brier = brier_min$c[1], best_log = 0)#logacc_min$c[1])
}
c_posterior <- 1
a_posterior <- new_a
b_posterior <- 1 - new_a - c_posterior
# Calculate Brier inaccuracy
# First Brier if each is true
brier_a <- (1 - a_posterior)^2 + b_posterior^2 + c_posterior^2
brier_b <- (1 - b_posterior)^2 + c_posterior^2 + a_posterior^2
brier_c <- (1 - c_posterior)^2 + a_posterior^2 + b_posterior^2
# Then overall Brier
brier_t <- a_prob * brier_a + b_prob * brier_b + c_prob * brier_c
brier_t / 3
1.68+1.28+0.08*4
3.28/18
x <- 0.8
a <- 1/6
b <- 1/6
c <- 2/3
take_1 <- a * (1 + (1-x)^2 + x^2) + b * (x^2 + x^2) + c * ((1-x)^2 + (1-x)^2)
x <- 0.8
a <- 1/6
b <- 1/6
c <- 2/3
take_1 <- [a * (1 + (1-x)^2 + x^2) + b * (x^2 + x^2) + c * ((1-x)^2 + (1-x)^2)]/3
x <- 0.8
a <- 1/6
b <- 1/6
c <- 2/3
take_1 <- (a * (1 + (1-x)^2 + x^2) + b * (x^2 + x^2) + c * ((1-x)^2 + (1-x)^2))/3
x <- 0.8
a <- 1/6
b <- 1/6
c <- 2/3
take_1 <- (a * (1 + (1-x)^2 + x^2) + b * (x^2 + x^2) + c * ((1-x)^2 + (1-x)^2))/3
take_2 <- (a * (1 + 2*x^2 -2*x + 1) + 2 * b * x^2 + 2 * c * (x^2 - 2*x + 1))/3
x <- 0.8
a <- 1/6
b <- 1/6
c <- 2/3
take_1 <- (a * (1 + (1-x)^2 + x^2) + b * (x^2 + x^2) + c * ((1-x)^2 + (1-x)^2))/3
take_2 <- (a * (1 + 2*x^2 -2*x + 1) + 2 * b * x^2 + 2 * c * (x^2 - 2*x + 1))/3
take_3 <- (2*a*(x^2 + x + 1) + 2*b*x^2 + 2*c*(2^x - 2*x + 1))/3
x <- 0.8
a <- 1/6
b <- 1/6
c <- 2/3
take_1 <- (a * (1 + (1-x)^2 + x^2) + b * (x^2 + x^2) + c * ((1-x)^2 + (1-x)^2))/3
take_2 <- (a * (1 + 2*x^2 -2*x + 1) + 2 * b * x^2 + 2 * c * (x^2 - 2*x + 1))/3
take_3 <- (2*a*(x^2 + x + 1) + 2*b*x^2 + 2*c*(x^2 - 2*x + 1))/3
x <- 0.8
a <- 1/6
b <- 1/6
c <- 2/3
take_1 <- (a * (1 + (1-x)^2 + x^2) + b * (x^2 + x^2) + c * ((1-x)^2 + (1-x)^2))/3
take_2 <- (a * (1 + 2*x^2 -2*x + 1) + 2 * b * x^2 + 2 * c * (x^2 - 2*x + 1))/3
take_3 <- (2*a*(x^2 - x + 1) + 2*b*x^2 + 2*c*(x^2 - 2*x + 1))/3
x <- 0.8
a <- 1/6
b <- 1/6
c <- 2/3
take_1 <- (a * (1 + (1-x)^2 + x^2) + b * (x^2 + x^2) + c * ((1-x)^2 + (1-x)^2))/3
take_2 <- (a * (1 + 2*x^2 -2*x + 1) + 2 * b * x^2 + 2 * c * (x^2 - 2*x + 1))/3
take_3 <- (2*a*(x^2 - x + 1) + 2*b*x^2 + 2*c*(x^2 - 2*x + 1))/3
take_4 <- (2*x^2*(a + b + c) - 2*x * (a + 2c) - 2(a + c))/3
x <- 0.8
a <- 1/6
b <- 1/6
c <- 2/3
take_1 <- (a * (1 + (1-x)^2 + x^2) + b * (x^2 + x^2) + c * ((1-x)^2 + (1-x)^2))/3
take_2 <- (a * (1 + 2*x^2 -2*x + 1) + 2 * b * x^2 + 2 * c * (x^2 - 2*x + 1))/3
take_3 <- (2*a*(x^2 - x + 1) + 2*b*x^2 + 2*c*(x^2 - 2*x + 1))/3
take_4 <- (2*x^2*(a + b + c) - 2*x * (a + 2*c) - 2(a + c))/3
x <- 0.8
a <- 1/6
b <- 1/6
c <- 2/3
take_1 <- (a * (1 + (1-x)^2 + x^2) + b * (x^2 + x^2) + c * ((1-x)^2 + (1-x)^2))/3
take_2 <- (a * (1 + 2*x^2 -2*x + 1) + 2 * b * x^2 + 2 * c * (x^2 - 2*x + 1))/3
take_3 <- (2*a*(x^2 - x + 1) + 2*b*x^2 + 2*c*(x^2 - 2*x + 1))/3
take_4 <- (2 *x^2 * (a + b + c) - 2 * x * (a + 2*c) - 2* (a + c))/3
x <- 0.8
a <- 1/6
b <- 1/6
c <- 2/3
take_1 <- (a * (1 + (1-x)^2 + x^2) + b * (x^2 + x^2) + c * ((1-x)^2 + (1-x)^2))/3
take_2 <- (a * (1 + 2*x^2 -2*x + 1) + 2 * b * x^2 + 2 * c * (x^2 - 2*x + 1))/3
take_3 <- (2*a*(x^2 - x + 1) + 2*b*x^2 + 2*c*(x^2 - 2*x + 1))/3
take_4 <- (2 *x^2 * (a + b + c) - 2 * x * (a + 2*c) + 2* (a + c))/3
x <- 0.8
a <- 1/6
b <- 1/6
c <- 2/3
take_1 <- (a * (1 + (1-x)^2 + x^2) + b * (x^2 + x^2) + c * ((1-x)^2 + (1-x)^2))/3
take_2 <- (a * (1 + 2*x^2 -2*x + 1) + 2 * b * x^2 + 2 * c * (x^2 - 2*x + 1))/3
take_3 <- (2*a*(x^2 - x + 1) + 2*b*x^2 + 2*c*(x^2 - 2*x + 1))/3
take_4 <- (2 *x^2 * (a + b + c) - 2 * x * (a + 2*c) + 2* (a + c))/3
take_5 <- (2 *x^2 - 2 * x * (a + 2*c) + 2* (a + c))/3
install.packages("magick")
install.packages("pdftools")
capabilities('cairo')
capabilities()
x11()
capabilities()
#| label: loader
#| cache: false
require(tidyverse)
require(slider)
require(stringr)
require(knitr)
require(lsa)
if(knitr::is_latex_output()) {
knitr::opts_chunk$set(dev = 'cairo_pdf')
}
# Graph Themes
old <- theme_set(theme_minimal())
theme_set(old)
theme_update(plot.title = element_text(family = "Scala Pro", size = 24, face = "bold"),
plot.subtitle = element_text(family = "Scala Sans Pro", size = 20),
axis.text = element_text(family = "Scala Sans Pro", size = 18),
plot.background = element_rect(fill = "#F9FFFF"),
panel.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "#F9FFFF"),
panel.grid = element_line(color = "grey92"),
legend.text = element_text(family = "Scala Sans Pro", size = 20),
legend.title = element_text(family = "Scala Sans Pro", size = 20),
strip.text = element_text(family = "Scala Sans Pro", size = 20),
legend.key.spacing.y = unit(0.5, 'lines'),
legend.key.spacing.x = unit(1, 'cm')
)
if(knitr::is_latex_output()) {
theme_update(plot.title = element_text(family = "Europa-Bold", size = 14),
plot.subtitle = element_text(family = "EB Garamond", size = 11),
axis.text = element_text(family = "EB Garamond", size = 10),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"),
legend.background = element_rect(fill = "white"),
panel.grid = element_line(color = "grey92"),
legend.text = element_text(family = "EB Garamond", size = 11),
strip.text = element_text(family = "EB Garamond", size = 12),
legend.key.spacing.y = unit(0.5, 'lines'),
legend.key.spacing.x = unit(0, 'cm')
)
}
#| label: setup
#| cache: true
load("philo_bib.RData")
load("philo_cite.RData")
philo_bib <- philo_bib |>
filter(journal != "Nous" | !str_detect(longcite, "Suppl") | str_detect(longcite, "Sp. Iss."))
authadjust <- function(x){
paste0(str_extract(x, '\\b[^,]+$'), " ", str_to_title(str_extract(x,".+(?=,)")))
}
authadjust_short <- function(x){
str_to_title(str_extract(x,".+(?=,)"))
}
article_years <- philo_bib |>
as_tibble() |>
select(id, year)
article_title <- philo_bib |>
as_tibble() |>
select(id, author, art_title, journal)
citation_tibble <- philo_cite |>
as_tibble() |>
rename(new = id, old = refs) |>
left_join(article_years, by = c("old" = "id")) |>
rename(old_year = year)  |>
left_join(article_years, by = c("new" = "id")) |>
rename(new_year = year)
#| label: setupcos
#| cache: true
require(lsa)
long_article_ids <- c()
for(year in (1976:2015)){
topper <- 1
all_cited <- tribble(~old, ~n)
while(nrow(all_cited) < 100){
most_cited <- citation_tibble |>
filter(old_year == year) |>
group_by(old) |>
tally() |>
ungroup() |>
slice_max(n, n=topper)
recent_cited <- citation_tibble |>
filter(old_year == year, new_year >= pmax(2013,((year+2022.1)/2))) |>
group_by(old) |>
tally() |>
ungroup() |>
slice_max(n, n=topper)
orig_cited <- citation_tibble |>
filter(old_year == year, new_year <= pmin(year+10,((year+2022)/2))) |>
group_by(old) |>
tally() |>
ungroup() |>
slice_max(n, n=topper)
all_cited <- bind_rows(most_cited, recent_cited, orig_cited) |>
distinct(old, .keep_all = TRUE) |>
mutate(old_year = year)
topper <- topper + 1
}
long_article_ids <- bind_rows(
long_article_ids,
slice_max(all_cited, n, n=100, with_ties = FALSE)
)
}
long_cites <- citation_tibble |>
filter(old %in% long_article_ids$old, new_year >=1983, new_year <= 2022) |>
ungroup() |>
group_by(old, new_year) |>
tally(name="year_cites") |>
ungroup() |>
complete(old, new_year, fill = list(year_cites = 0)) |>
pivot_wider(id_cols = "old", names_from = "new_year", values_from = "year_cites") |>
select(-old)
cos_years <- cosine(as.matrix(long_cites)) |>
as.data.frame() |>
rownames_to_column(var = "year1") |>
pivot_longer(cols = !year1, names_to = "year2", values_to = "cos_value") |>
mutate(year1 = as.numeric(year1), year2 = as.numeric(year2))
#| label: fig-matrix
#| cache: false
cos_graph <- ggplot(cos_years, aes(x = year1, y = year2, value = cos_value)) +
geom_tile(aes(fill = cos_value)) +
xlab(element_blank()) +
ylab(element_blank()) +
labs(fill = "Cosine",
title = "Similarity between citations in different years")
cos_graph
long_cites <- citation_tibble |>
filter(old %in% long_article_ids$old, new_year >=1980, new_year <= 2022) |>
ungroup() |>
group_by(old, new_year) |>
tally(name="year_cites") |>
ungroup() |>
complete(old, new_year, fill = list(year_cites = 0)) |>
pivot_wider(id_cols = "old", names_from = "new_year", values_from = "year_cites") |>
select(-old)
cos_years <- cosine(as.matrix(long_cites)) |>
as.data.frame() |>
rownames_to_column(var = "year1") |>
pivot_longer(cols = !year1, names_to = "year2", values_to = "cos_value") |>
mutate(year1 = as.numeric(year1), year2 = as.numeric(year2))
#| label: fig-matrix
#| cache: false
cos_graph <- ggplot(filter(cos_years, year1 >= 1983, year2 >= 1983), aes(x = year1, y = year2, value = cos_value)) +
geom_tile(aes(fill = cos_value)) +
xlab(element_blank()) +
ylab(element_blank()) +
labs(fill = "Cosine",
title = "Similarity between citations in different years")
cos_graph
#| label: fig-rolling-average
#| cache: false
cos_delayed <- cos_years |>
filter(year2 >= 1985, year1 >= year2 - 1, year1 <= year2 - 1) |>
group_by(year2) |>
summarise(past_sim_score = mean(cos_value)) |>
ggplot(aes(x = year2, y = past_sim_score)) + geom_smooth() + geom_line()
cos_delayed
#| label: fig-rolling-average-late
#| cache: false
long_cites_late <- citation_tibble |>
filter(old %in% long_article_ids$old, new_year >=1990, new_year <= 2022, old_year >= 1986) |>
ungroup() |>
group_by(old, new_year) |>
tally(name="year_cites") |>
ungroup() |>
complete(old, new_year, fill = list(year_cites = 0)) |>
pivot_wider(id_cols = "old", names_from = "new_year", values_from = "year_cites") |>
select(-old)
cos_years_late <- cosine(as.matrix(long_cites)) |>
as.data.frame() |>
rownames_to_column(var = "year1") |>
pivot_longer(cols = !year1, names_to = "year2", values_to = "cos_value") |>
mutate(year1 = as.numeric(year1), year2 = as.numeric(year2))
cos_delayed+late <- cos_years_late |>
filter(year2 >= 1995, year1 >= year2 - 1, year1 <= year2 - 1) |>
group_by(year2) |>
summarise(past_sim_score = mean(cos_value)) |>
ggplot(aes(x = year2, y = past_sim_score)) +
geom_smooth() +
geom_line() +
ylab("Cosine") +
xlab(element_blank())
#| label: fig-rolling-average-late
#| cache: false
long_cites_late <- citation_tibble |>
filter(old %in% long_article_ids$old, new_year >=1990, new_year <= 2022, old_year >= 1986) |>
ungroup() |>
group_by(old, new_year) |>
tally(name="year_cites") |>
ungroup() |>
complete(old, new_year, fill = list(year_cites = 0)) |>
pivot_wider(id_cols = "old", names_from = "new_year", values_from = "year_cites") |>
select(-old)
cos_years_late <- cosine(as.matrix(long_cites)) |>
as.data.frame() |>
rownames_to_column(var = "year1") |>
pivot_longer(cols = !year1, names_to = "year2", values_to = "cos_value") |>
mutate(year1 = as.numeric(year1), year2 = as.numeric(year2))
cos_delayed_late <- cos_years_late |>
filter(year2 >= 1995, year1 >= year2 - 1, year1 <= year2 - 1) |>
group_by(year2) |>
summarise(past_sim_score = mean(cos_value)) |>
ggplot(aes(x = year2, y = past_sim_score)) +
geom_smooth() +
geom_line() +
ylab("Cosine") +
xlab(element_blank())
cos_delayed_late
#| label: setupyeargraph
#| cache: false
year_to_year <- function(end_year){
citation_tibble |>
ungroup() |>
group_by(old_year, new_year) |>
filter(new_year <= 2022) |>
filter(old_year <= 2018) |>
filter(old_year >= 1976) |>
tally() |>
left_join(
philo_bib |>
group_by(year) |>
tally(name = "articles") |>
select(old_year = year, articles),
by = "old_year"
) |>
mutate(mean = n/articles) |>
filter(new_year >= end_year - 4, new_year <= end_year, old_year <= end_year -5) |>
ggplot(aes(x = old_year, y = mean, group = as.factor(new_year), colour = as.factor(new_year))) +
geom_line() +
xlab("Cited Year") +
ylab("Mean Citations") +
labs(colour = "Citing Year")
}
five_year_mean <- function(end_year){
citation_tibble |>
ungroup() |>
group_by(old_year, new_year) |>
filter(new_year <= 2022) |>
filter(old_year <= 2018) |>
filter(old_year >= 1976) |>
tally() |>
left_join(
philo_bib |>
group_by(year) |>
tally(name = "articles") |>
select(old_year = year, articles),
by = "old_year"
) |>
mutate(mean = n/articles) |>
filter(new_year >= end_year - 4, new_year <= end_year, old_year <= end_year -5) |>
ungroup() |>
group_by(old_year) |>
summarise(meanmean = mean(mean)) |>
ggplot(aes(x = old_year, y = meanmean)) +
geom_line() +
geom_trend() +
xlab("Cited Year") +
ylab("Mean Citations")
}
#| label: fig-mean-most-recent
#| fig-cap: "Mean citations, in 2018-2022, of articles originally published in different years"
#| fig-subcap:
#|   - "Individual Years"
#|   - "Overall average"
#| layout-ncol: 2
year_to_year(2022)
five_year_mean(2022)
#| label: setupyeargraph
#| cache: false
year_to_year <- function(end_year){
citation_tibble |>
ungroup() |>
group_by(old_year, new_year) |>
filter(new_year <= 2022) |>
filter(old_year <= 2018) |>
filter(old_year >= 1976) |>
tally() |>
left_join(
philo_bib |>
group_by(year) |>
tally(name = "articles") |>
select(old_year = year, articles),
by = "old_year"
) |>
mutate(mean = n/articles) |>
filter(new_year >= end_year - 4, new_year <= end_year, old_year <= end_year -5) |>
ggplot(aes(x = old_year, y = mean, group = as.factor(new_year), colour = as.factor(new_year))) +
geom_line() +
xlab("Cited Year") +
ylab("Mean Citations") +
labs(colour = "Citing Year")
}
five_year_mean <- function(end_year){
citation_tibble |>
ungroup() |>
group_by(old_year, new_year) |>
filter(new_year <= 2022) |>
filter(old_year <= 2018) |>
filter(old_year >= 1976) |>
tally() |>
left_join(
philo_bib |>
group_by(year) |>
tally(name = "articles") |>
select(old_year = year, articles),
by = "old_year"
) |>
mutate(mean = n/articles) |>
filter(new_year >= end_year - 4, new_year <= end_year, old_year <= end_year -5) |>
ungroup() |>
group_by(old_year) |>
summarise(meanmean = mean(mean)) |>
ggplot(aes(x = old_year, y = meanmean)) +
geom_line() +
geom_smooth() +
xlab("Cited Year") +
ylab("Mean Citations")
}
#| label: fig-mean-most-recent
#| fig-cap: "Mean citations, in 2018-2022, of articles originally published in different years"
#| fig-subcap:
#|   - "Individual Years"
#|   - "Overall average"
#| layout-ncol: 2
year_to_year(2022)
five_year_mean(2022)
View(long_cites)
View(philo_bib)
View(recent_cited)
View(citation_tibble)
#| label: fig-mean-turn-century
#| fig-cap: "Mean citations, in 1998-2002, of articles originally published in different years"
#| fig-subcap:
#|   - "Individual Years"
#|   - "Overall average"
#| layout-ncol: 2
year_to_year(2002)
five_year_mean(2002)
#| label: fig-mean-turn-century
#| fig-cap: "Mean citations, in 1993-1997, of articles originally published in different years"
#| fig-subcap:
#|   - "Individual Years"
#|   - "Overall average"
#| layout-ncol: 2
year_to_year(1997)
five_year_mean(1997)
